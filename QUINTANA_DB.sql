USE MASTER
GO
DROP DATABASE ENCASA
GO  
USE MASTER
GO
CREATE DATABASE ENCASA
GO
--CREACION DE TABLAS--
USE ENCASA
GO 
CREATE TABLE ARTICULOS(
    ID INT NOT NULL IDENTITY(1,1),
    CODIGO VARCHAR(25) NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(150) NULL,
    IDCATEGORIA INT NOT NULL,
    IDSECCION INT NOT NULL,
    IDMARCA INT NOT NULL,
    IDPROVEEDOR INT NOT NULL,
    PRECIO MONEY NOT NULL,
    STOCK INT NOT NULL,
    EXISTENCIA INT DEFAULT 1, 
    IDORIGEN INT NULL,
    IMAGEN VARCHAR (200) NULL 
)
GO
CREATE TABLE CATEGORIAS(
    ID INT NOT NULL IDENTITY(1,1),
    EXISTENCIA INT DEFAULT 1, 
    NOMBRE VARCHAR(50) NOT NULL
)
GO
CREATE TABLE SECCIONES(
    ID INT NOT NULL IDENTITY(1,1),
    EXISTENCIA INT DEFAULT 1, 
    NOMBRE VARCHAR(50) NOT NULL
)
GO
CREATE TABLE MARCAS(
    ID INT NOT NULL IDENTITY(1,1),
    EXISTENCIA INT DEFAULT 1, 
    NOMBRE VARCHAR(75) NOT NULL
)
GO
CREATE TABLE PROVEEDORES(
    ID INT NOT NULL IDENTITY(1,1),
    EXISTENCIA INT DEFAULT 1, 
    NOMBRE VARCHAR(75) NOT NULL,
    DESCRIPCION VARCHAR(150) NULL,
    IDDIRECION INT NOT NULL
)
GO
CREATE TABLE PAISES(
    ID INT NOT NULL IDENTITY(1,1),
    EXISTENCIA INT DEFAULT 1, 
    NOMBRE VARCHAR (50) NOT NULL
)
GO
CREATE TABLE USUARIOS(
    ID INT NOT NULL IDENTITY(1,1),
    NOMBRE VARCHAR (50) NOT NULL,
    APELLIDO VARCHAR (50) NOT NULL,
    DNI INT NOT NULL,
    EXISTENCIA INT DEFAULT 1, 
    MAIL VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(50) NOT NULL,
    CONTRASEÑA VARCHAR(50) NOT NULL,
    IDDIRECCION INT NOT NULL,
    TIPO INT NOT NULL
)
GO 
CREATE TABLE DIRECCIONES(
    ID INT NOT NULL IDENTITY(1,1),
    CALLE VARCHAR (50),
    ALTURA INT NOT NULL,
    LOCALIDAD VARCHAR (50) NOT NULL,
    PROVINCIA VARCHAR (50) NOT NULL,
    DESCRIPCION VARCHAR (100) 
)
GO
CREATE TABLE VENTAS(
    ID INT NOT NULL IDENTITY(1,1),
    IDUSUARIO INT NOT NULL,
    PRECIO_TOTAL MONEY NOT NULL,
    FECHA DATETIME NOT NULL,
    ESTADO INT NOT NULL
)
GO
CREATE TABLE VENTAS_X_ARTICULOS(
    IDVENTA INT NOT NULL,
    IDARTICULOS INT NOT NULL,
    CANTIDAD INT NOT NULL,
    PRECIO MONEY NOT NULL
)
GO
-- CREACION DE PRIMARY KEY--
ALTER TABLE ARTICULOS
ADD CONSTRAINT PK_ARTICULOS PRIMARY KEY (ID)
GO
ALTER TABLE CATEGORIAS
ADD CONSTRAINT PK_CATEGORIA PRIMARY KEY (ID)
GO
ALTER TABLE SECCIONES
ADD CONSTRAINT PK_SECCION PRIMARY KEY (ID)
GO
ALTER TABLE MARCAS
ADD CONSTRAINT PK_MARCA PRIMARY KEY (ID)
GO
ALTER TABLE PROVEEDORES 
ADD CONSTRAINT PK_PROVEEDORES PRIMARY KEY (ID)
GO 
ALTER TABLE PAISES
ADD CONSTRAINT PK_PAIS PRIMARY KEY (ID)
GO
ALTER TABLE DIRECCIONES
ADD CONSTRAINT PK_DIRECCIONES PRIMARY KEY (ID)
GO
ALTER TABLE USUARIOS
ADD CONSTRAINT PK_USUARIOS PRIMARY KEY (ID)
GO
ALTER TABLE VENTAS
ADD CONSTRAINT PK_VENTAS PRIMARY KEY (ID)
GO 
ALTER TABLE VENTAS_X_ARTICULOS 
ADD CONSTRAINT PK_VENTAS_X_ARTICULO PRIMARY KEY (IDVENTA, IDARTICULOS)

--CREACION DE FOREIGN KEY--
GO
ALTER TABLE ARTICULOS   
ADD CONSTRAINT FK_CATEGORIAS FOREIGN KEY(IDCATEGORIA) REFERENCES CATEGORIAS(ID)
GO
ALTER TABLE VENTAS
ADD CONSTRAINT FK_VENTAS FOREIGN KEY(IDUSUARIO) REFERENCES USUARIOS(ID)
GO
ALTER TABLE ARTICULOS
ADD CONSTRAINT FK_SECCIONES FOREIGN KEY(IDSECCION) REFERENCES SECCIONES(ID)
GO
ALTER TABLE ARTICULOS
ADD CONSTRAINT FK_MARCAS FOREIGN KEY(IDMARCA) REFERENCES MARCAS(ID)
GO
ALTER TABLE ARTICULOS
ADD CONSTRAINT FK_PROVEEDORES FOREIGN KEY(IDPROVEEDOR) REFERENCES PROVEEDORES(ID)
GO
ALTER TABLE ARTICULOS
ADD CONSTRAINT FK_ORIGEN FOREIGN KEY(IDORIGEN) REFERENCES PAISES(ID)
GO
ALTER TABLE PROVEEDORES
ADD CONSTRAINT FK_PROVEEDOR FOREIGN KEY(IDDIRECION) REFERENCES DIRECCIONES(ID)
GO
ALTER TABLE USUARIOS
ADD CONSTRAINT FK_USUARIOS FOREIGN KEY(IDDIRECCION) REFERENCES DIRECCIONES(ID)
GO
ALTER TABLE VENTAS_X_ARTICULOS
ADD CONSTRAINT FK_VENTAS_VENTAS FOREIGN KEY (IDVENTA) REFERENCES VENTAS (ID)
GO
ALTER TABLE VENTAS_X_ARTICULOS
ADD CONSTRAINT FK_VENTAS_ARTICULOS FOREIGN KEY (IDARTICULOS) REFERENCES ARTICULOS(ID)
GO
insert into MARCAS values (1,'Arredo'), (1,'Arcoiris'), (1,'Livanlito'), (1,'Delta'), (1,'Sama')
insert into CATEGORIAS values (1,'Blanqueria'),(1,'Muebles'), (1,'Lamparas'), (1,'Alfombras'), (1,'Orden')
insert into SECCIONES VALUES (1,'Dormitorio'),(1,'Living'),(1,'Baño'),(1,'Cocina')
INSERT INTO DIRECCIONES VALUES (' ', 123, ' ', ' ',' ')
insert into PROVEEDORES VALUES (1, 'Pepe', 'Alto proveedor', 1)
INSERT INTO PAISES VALUES(1, 'Argentina'), (1,'Marruecos'), (1, 'Brasil')
insert into ARTICULOS values ('S001', 'Sabanas Animal Print', 'Tela de 180 hilos', 1, 1, 2, 1, 2750, 1, 1, 1,'https://http2.mlstatic.com/juego-sabanas-2-12-plazas-animal-print-euro-percal-oregon-D_NQ_NP_774916-MLA27680795517_072018-F.jpg')
insert into ARTICULOS values ('MPH007', 'Estante flotante', 'Madera lacada', 2, 2, 3, 1, 60050, 1, 1, 1,'https://http2.mlstatic.com/estantes-repisas-flotantes-todas-las-medidas-lemensiedeco-D_NQ_NP_662276-MLA31016626802_062019-F.jpg')
insert into ARTICULOS values ('APB003', 'Alfombra para Baño', 'Absorbe el agua', 4, 3, 4, 1, 1050, 1, 1, 1,'https://d26lpennugtm8s.cloudfront.net/stores/501/942/products/633415-mla25233543771_122016-o-4c37a0f1a267e3d63915133075006902-640-0.jpg')
insert into ARTICULOS values ('APD023', 'Alfombra', 'Alfombra de piel natural', 4, 2, 4, 1, 23000, 1, 1, 1,'https://d26lpennugtm8s.cloudfront.net/stores/450/368/products/dsc_34741-fa37a7dd71d3f7854d15294507805658-640-0.jpg')
insert into ARTICULOS values ('APD023', 'Alfombra', 'Alfombra de piel natural', 4, 4, 4, 1, 23000, 1, 1, 1,'https://d26lpennugtm8s.cloudfront.net/stores/450/368/products/dsc_34741-fa37a7dd71d3f7854d15294507805658-640-0.jpg')
GO
USE ENCASA
GO
CREATE PROCEDURE SP_LISTAR_ARTICULOS
AS
SELECT a.ID, A.CODIGO, a.NOMBRE, a.DESCRIPCION, a.EXISTENCIA, a.IMAGEN, a.PRECIO, a.STOCK,
m.NOMBRE as nombreMarca, m.ID as idMarca, c.NOMBRE as nombreCat, c.ID as idCat, s.ID as idSec, s.NOMBRE as nombreSec,
p.NOMBRE as paisOrig, p.ID as idOrig FROM Articulos as A 
INNER JOIN MARCAS as M on m.ID = a.IDMARCA 
INNER JOIN Categorias as C on C.ID = a.IDCATEGORIA
INNER JOIN SECCIONES AS S ON S.ID = A.IDSECCION
INNER JOIN PAISES AS P ON P.ID = A.IDORIGEN
GO
CREATE PROCEDURE SP_LISTAR_MARCAS
AS
SELECT M.ID, M.NOMBRE as nombreMarca FROM MARCAS AS M
WHERE EXISTENCIA = 1
GO
CREATE PROCEDURE SP_LISTAR_PROVEEDORES
AS
SELECT P.ID, P.NOMBRE AS nombreProveedor, P.DESCRIPCION AS descripcionProveedor, D.ID, D.CALLE AS calleDireccion, D.ALTURA
AS alturaDireccion, D.LOCALIDAD AS localidadDireccion, D.PROVINCIA AS provinciaDireccion, D.DESCRIPCION AS descripcionDireccion
FROM PROVEEDORES AS P
INNER JOIN DIRECCIONES AS D ON D.ID=P.IDDIRECION
WHERE EXISTENCIA = 1
GO
CREATE PROCEDURE SP_LISTAR_USUARIOS
AS
SELECT U.ID, U.TIPO, U.NOMBRE AS nombreUsuario, U.APELLIDO AS apellidoUsuario, U.DNI, U.MAIL AS mailUsuario, U.USERNAME AS usernameUsuario,
D.ID, D.CALLE AS calleDireccion, D.ALTURA AS alturaDireccion, U.CONTRASEÑA AS passwordUsuario, D.LOCALIDAD AS localidadDireccion, D.PROVINCIA AS 
provinciaDireccion, D.DESCRIPCION AS descripcionDireccion FROM USUARIOS AS U
INNER JOIN DIRECCIONES AS D ON D.ID=U.IDDIRECCION
WHERE EXISTENCIA = 1
GO
CREATE PROCEDURE SP_LISTAR_CATEGORIAS
AS
SELECT C.ID, C.NOMBRE AS nombreCategoria FROM CATEGORIAS AS C
WHERE EXISTENCIA = 1
GO
CREATE PROCEDURE SP_LISTAR_PAISES
AS
SELECT PA.ID, PA.NOMBRE AS nombrePais FROM PAISES AS PA
WHERE EXISTENCIA = 1
GO
CREATE PROCEDURE SP_LISTAR_SECCIONES
AS
SELECT S.ID, S.NOMBRE AS nombreSeccion FROM SECCIONES AS S
WHERE EXISTENCIA = 1
GO
CREATE PROCEDURE SP_LISTAR_DORMITORIO
AS
SELECT a.ID, A.CODIGO, a.NOMBRE, a.DESCRIPCION, a.EXISTENCIA, a.IMAGEN, a.PRECIO, a.STOCK,
m.NOMBRE as nombreMarca, m.ID as idMarca, c.NOMBRE as nombreCat, c.ID as idCat, s.ID as idSec, s.NOMBRE as nombreSec,
p.NOMBRE as paisOrig, p.ID as idOrig FROM Articulos as A 
INNER JOIN MARCAS as M on m.ID = a.IDMARCA 
INNER JOIN Categorias as C on C.ID = a.IDCATEGORIA
INNER JOIN SECCIONES AS S ON S.ID = A.IDSECCION 
INNER JOIN PAISES AS P ON P.ID = A.IDORIGEN
WHERE S.NOMBRE = 'Dormitorio' 
GO
CREATE PROCEDURE SP_LISTAR_LIVING
AS
SELECT a.ID, A.CODIGO, a.NOMBRE, a.DESCRIPCION, a.EXISTENCIA, a.IMAGEN, a.PRECIO, a.STOCK,
m.NOMBRE as nombreMarca, m.ID as idMarca, c.NOMBRE as nombreCat, c.ID as idCat, s.ID as idSec, s.NOMBRE as nombreSec,
p.NOMBRE as paisOrig, p.ID as idOrig FROM Articulos as A 
INNER JOIN MARCAS as M on m.ID = a.IDMARCA 
INNER JOIN Categorias as C on C.ID = a.IDCATEGORIA
INNER JOIN SECCIONES AS S ON S.ID = A.IDSECCION 
INNER JOIN PAISES AS P ON P.ID = A.IDORIGEN
WHERE S.NOMBRE = 'Living'
GO
CREATE PROCEDURE SP_LISTAR_BANIO
AS
SELECT a.ID, A.CODIGO, a.NOMBRE, a.DESCRIPCION, a.EXISTENCIA, a.IMAGEN, a.PRECIO, a.STOCK,
m.NOMBRE as nombreMarca, m.ID as idMarca, c.NOMBRE as nombreCat, c.ID as idCat, s.ID as idSec, s.NOMBRE as nombreSec,
p.NOMBRE as paisOrig, p.ID as idOrig FROM Articulos as A 
INNER JOIN MARCAS as M on m.ID = a.IDMARCA 
INNER JOIN Categorias as C on C.ID = a.IDCATEGORIA
INNER JOIN SECCIONES AS S ON S.ID = A.IDSECCION 
INNER JOIN PAISES AS P ON P.ID = A.IDORIGEN
WHERE S.NOMBRE = 'Baño'
GO
CREATE PROCEDURE SP_LISTAR_COCINA
AS
SELECT a.ID, A.CODIGO, a.NOMBRE, a.DESCRIPCION, a.EXISTENCIA, a.IMAGEN, a.PRECIO, a.STOCK,
m.NOMBRE as nombreMarca, m.ID as idMarca, c.NOMBRE as nombreCat, c.ID as idCat, s.ID as idSec, s.NOMBRE as nombreSec,
p.NOMBRE as paisOrig, p.ID as idOrig FROM Articulos as A 
INNER JOIN MARCAS as M on m.ID = a.IDMARCA 
INNER JOIN Categorias as C on C.ID = a.IDCATEGORIA
INNER JOIN SECCIONES AS S ON S.ID = A.IDSECCION 
INNER JOIN PAISES AS P ON P.ID = A.IDORIGEN
WHERE S.NOMBRE = 'Cocina'
GO
CREATE PROCEDURE SP_MODIFICAR_ARTICULO
@ID INT,
@Codigo VARCHAR(25),
@Nombre VARCHAR(50),
@Descripcion VARCHAR(150),
@IdCategoria INT,
@IdSeccion INT,
@IdMarca INT,
@IdProveedor INT,
@Precio MONEY,
@Stock INT,
@IdOrigen INT,
@Imagen VARCHAR(200)
AS 
UPDATE ARTICULOS SET Codigo = @Codigo, NOMBRE = @Nombre, DESCRIPCION = @Descripcion, IDCATEGORIA = @IdCategoria,
IDSECCION = @IdSeccion, IDMARCA = @IdMarca, IDPROVEEDOR = @IdProveedor, PRECIO = @Precio,
STOCK = @Stock, IDORIGEN = @IdOrigen, IMAGEN = @Imagen
WHERE ID = @ID
GO
CREATE PROCEDURE SP_MODIFICAR_MARCA
@ID INT,
@Nombre VARCHAR(50)
AS 
UPDATE MARCAS SET NOMBRE = @Nombre
WHERE ID = @ID
SELECT * FROM MARCAS
GO
CREATE PROCEDURE SP_MODIFICAR_CATEGORIA
@ID INT,
@Nombre VARCHAR(50)
AS 
UPDATE CATEGORIAS SET NOMBRE = @Nombre
WHERE ID = @ID
GO
CREATE PROCEDURE SP_MODIFICAR_PAIS
@ID INT,
@Nombre VARCHAR(50)
AS 
UPDATE PAISES SET NOMBRE = @Nombre
WHERE ID = @ID
GO
CREATE PROCEDURE SP_MODIFICAR_PROVEEDOR
@Id INT,
@Nombre VARCHAR(50),
@Descripcion VARCHAR(150),
@IdDireccion INT
AS 
UPDATE PROVEEDORES SET NOMBRE=@Nombre, DESCRIPCION=@Descripcion, IDDIRECION=@IdDireccion
WHERE ID=@Id
GO
CREATE PROCEDURE SP_MODIFICAR_USUARIO
@Id INT,
@Nombre VARCHAR (50),
@Apellido VARCHAR (50),
@Dni INT,
@Mail VARCHAR(100),
@Username VARCHAR(50),
@Contraseña VARCHAR(50),
@Iddireccion INT,
@Tipo INT
AS
UPDATE USUARIOS SET NOMBRE=@Nombre,APELLIDO=@Apellido, DNI=@Dni, MAIL=@Mail, USERNAME=@Username, CONTRASEÑA=@Contraseña, IDDIRECCION=@Iddireccion, TIPO=@Tipo
WHERE ID=@Id
GO
CREATE PROCEDURE SP_MODIFICAR_DIRECCION
@Id INT,
@Calle VARCHAR(50),
@Altura INT,
@Localidad VARCHAR(50),
@Provincia VARCHAR(50),
@Descripcion VARCHAR(100)
AS
UPDATE DIRECCIONES SET CALLE=@Calle, ALTURA=@Altura, LOCALIDAD=@Localidad, PROVINCIA=@Provincia, DESCRIPCION=@Descripcion
WHERE ID = @Id
GO
CREATE PROCEDURE SP_ELIMINAR_ARTICULO
@ID INT,
@Existencia INT
AS 
UPDATE ARTICULOS SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_ELIMINAR_CATEGORIA
@ID INT,
@Existencia INT
AS 
UPDATE CATEGORIAS SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_ELIMINAR_MARCA
@ID INT,
@Existencia INT
AS 
UPDATE MARCAS SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_ELIMINAR_PROVEEDOR
@ID INT,
@Existencia INT
AS 
UPDATE PROVEEDORES SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_ELIMINAR_SECCIONES
@ID INT,
@Existencia INT
AS 
UPDATE SECCIONES SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_ELIMINAR_PAIS
@ID INT,
@Existencia INT
AS 
UPDATE PAISES SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_ELIMINAR_USUARIOS
@ID INT,
@Existencia INT
AS 
UPDATE USUARIOS SET EXISTENCIA = @Existencia
WHERE ID = @ID
GO
CREATE PROCEDURE SP_AGREGAR_ARTICULO
@Codigo VARCHAR(25),
@Nombre VARCHAR(50),
@Descripcion VARCHAR(150),
@IdCategoria INT,
@IdSeccion INT,
@IdMarca INT,
@IdProveedor INT,
@Precio MONEY,
@Stock INT,
@IdOrigen INT,
@Imagen VARCHAR(200)
AS 
insert into ARTICULOS (Codigo, NOMBRE, DESCRIPCION, IDCATEGORIA, IDSECCION, IDMARCA, IDPROVEEDOR, PRECIO, STOCK, IDORIGEN, IMAGEN)
values (@Codigo, @Nombre,@Descripcion , @IdCategoria, @IdSeccion, @IdMarca, @IdProveedor, @Precio, @Stock, @IdOrigen, @Imagen)
GO
CREATE PROCEDURE SP_AGREGAR_PROVEEDOR
@Nombre VARCHAR(50),
@Descripcion VARCHAR(150),
@IdDireccion INT
AS 
insert into PROVEEDORES (NOMBRE, DESCRIPCION, IDDIRECION)
values (@Nombre,@Descripcion , @IdDireccion)
GO
CREATE PROCEDURE SP_AGREGAR_DIRECCION
@Calle VARCHAR(50),
@Altura INT,
@Localidad VARCHAR(50),
@Provincia VARCHAR(50),
@Descripcion VARCHAR(100)
AS 
insert into DIRECCIONES(CALLE, ALTURA, LOCALIDAD, PROVINCIA, DESCRIPCION)
values (@Calle, @Altura, @Localidad, @Provincia, @Descripcion)
GO
CREATE PROCEDURE SP_AGREGAR_CATEGORIA
@Nombre VARCHAR(50)
AS 
insert into CATEGORIAS (NOMBRE)
values (@Nombre)
GO
CREATE PROCEDURE SP_AGREGAR_MARCA
@Nombre VARCHAR(50)
AS 
insert into MARCAS (NOMBRE)
values (@Nombre)
GO
CREATE PROCEDURE SP_AGREGAR_PAIS
@Nombre VARCHAR(50)
AS
INSERT INTO PAISES(NOMBRE)
VALUES (@Nombre)
GO
CREATE PROCEDURE SP_AGREGAR_USUARIO
@Nombre VARCHAR (50),
@Apellido VARCHAR (50),
@Dni INT,
@Mail VARCHAR(100),
@Username VARCHAR(50),
@Contraseña VARCHAR(50),
@Iddireccion INT,
@Tipo INT
AS
INSERT INTO USUARIOS (NOMBRE, APELLIDO, DNI, MAIL, USERNAME, CONTRASEÑA, IDDIRECCION, TIPO)
VALUES(@Nombre, @Apellido, @Dni, @Mail, @Username, @Contraseña, @Iddireccion, @Tipo)
select * from usuarios
GO
CREATE PROCEDURE SP_AGREGAR_VENTA
@Idusuario INT,
@Preciototal MONEY,
@Fecha DATETIME,
@Estado INT
AS
INSERT INTO VENTAS(IDUSUARIO, PRECIO_TOTAL, FECHA, ESTADO)
VALUES(@Idusuario, @Preciototal, @Fecha, @Estado)
GO
CREATE PROCEDURE SP_VENTAS_X_ARTICULO
@Idarticulo INT,
@Idventa INT,
@Cantidad INT,
@Precio MONEY
AS
INSERT INTO VENTAS_X_ARTICULOS(IDVENTA, IDARTICULOS, CANTIDAD, PRECIO)
VALUES (@Idventa, @Idarticulo, @Cantidad, @Precio)
GO
CREATE PROCEDURE SP_VENTA
@Idarticulo INT,
@Cantidadvendida INT
AS
UPDATE ARTICULOS SET STOCK-=@Cantidadvendida 
WHERE ID = @Idarticulo
GO
CREATE PROCEDURE SP_BUSCAR_DIRECCION
AS 
SELECT TOP 1 D.ID FROM DIRECCIONES AS D 
ORDER BY ID DESC
GO
CREATE PROCEDURE SP_BUSCAR_USUARIO
@NombreUsuario VARCHAR(50),
@Mail VARCHAR(100)
AS 
SELECT COUNT(NOMBRE) AS encontroUsuario, ID AS idUsuario FROM USUARIOS WHERE MAIL LIKE @Mail OR USERNAME LIKE @NombreUsuario
GROUP BY ID
GO  
CREATE PROCEDURE SP_BUSCAR_USUARIO_COMPLETO
@IdUsuario INT
AS
SELECT U.ID, U.TIPO, U.NOMBRE AS nombreUsuario, U.APELLIDO AS apellidoUsuario, U.DNI, U.MAIL AS mailUsuario, U.USERNAME AS usernameUsuario,
D.ID, D.CALLE AS calleDireccion, D.ALTURA AS alturaDireccion, U.CONTRASEÑA AS passwordUsuario, D.LOCALIDAD AS localidadDireccion, D.PROVINCIA AS 
provinciaDireccion, D.DESCRIPCION AS descripcionDireccion FROM USUARIOS AS U
INNER JOIN DIRECCIONES AS D ON D.ID=U.IDDIRECCION
WHERE EXISTENCIA = 1 AND U.ID = @IdUsuario
GO
exec SP_BUSCAR_USUARIO_COMPLETO @IdUsuario = 1
GO
CREATE PROCEDURE SP_BUSCAR_VENTA
AS 
SELECT TOP 1 V.ID FROM VENTAS AS V 
ORDER BY ID DESC
GO
CREATE PROCEDURE SP_BUSCAR_VENTA_EXACTA
@idUsuario INT
AS 
SELECT V.IDUSUARIO AS idUsuario, V.ID AS idVenta, V.PRECIO_TOTAL AS precioTotal, V.FECHA AS fechaCompra, V.ESTADO AS estadoVenta
FROM VENTAS AS V
WHERE V.IDUSUARIO = @idUsuario
GO
CREATE PROCEDURE SP_LISTA_COMPRAS_X_USUARIO
@idUsuario INT
AS
SELECT AXV.CANTIDAD AS cantXArticulo, AXV.PRECIO AS precioXArticulo, AXV.IDARTICULOS AS idArticulo, AXV.IDVENTA AS idVenta
FROM VENTAS_X_ARTICULOS AS AXV
INNER JOIN VENTAS AS V ON V.ID = AXV.IDVENTA
WHERE V.IDUSUARIO = @idUsuario  
GO
CREATE PROCEDURE SP_LISTAR_VENTAS
AS
SELECT V.ID AS idVenta, V.IDUSUARIO AS idUsuario ,U.USERNAME AS nombreUsuario, V.FECHA AS fechaVenta, V.PRECIO_TOTAL AS precioVenta, V.ESTADO AS estadoVenta FROM VENTAS AS V
INNER JOIN USUARIOS AS U ON U.ID=V.IDUSUARIO
GO
CREATE PROCEDURE SP_MODIFICAR_VENTA
@idVenta INT,
@estado INT
AS
UPDATE VENTAS SET ESTADO=@estado WHERE ID = @idVenta 
GO
CREATE VIEW VW_VENTAS_MENSUALES
AS
SELECT a.ID AS ID_ARTICULO, ISNULL(v.FECHA,GETDATE()) as FECHA_VENTA, NULLIF(COUNT(*),0) AS CONTEO_VENTAS
FROM ARTICULOS a
LEFT JOIN VENTAS_X_ARTICULOS va
ON va.IDARTICULOS = a.ID
LEFT JOIN VENTAS v
ON va.IDVENTA = v.ID
WHERE v.FECHA >= (SELECT DATEADD(m, DATEDIFF(m, 0, GETDATE()), 0))
GROUP BY a.ID,v.FECHA;
GO

select * from usuarios
select * from VW_VENTAS_MENSUALES
select * from ARTICULOS
SELECT DISTINCT A.NOMBRE AS nombreArt, A.DESCRIPCION AS descripcionArt, CONTEO_VENTAS as conteo FROM VW_VENTAS_MENSUALES
INNER JOIN ARTICULOS AS A ON A.ID = VW_VENTAS_MENSUALES.ID_ARTICULO
WHERE A.IDSECCION = 2
GROUP BY A.NOMBRE, A.DESCRIPCION
